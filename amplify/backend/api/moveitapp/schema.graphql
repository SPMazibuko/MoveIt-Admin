# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules

input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type User @model {
  id: ID!
  username: String!
  email: String!
  vehiclesbookings: [VehicleBooking]
    @hasMany(indexName: "byUser", fields: ["id"])
  roombooking: [RoomBooking] @hasMany(indexName: "byUser", fields: ["id"])

  vehicles: Vehicle @hasOne
}

# delivery schemas
type Vehicle @model {
  id: ID!
  RegistrationNumber: String!
  VINNumber: String!
  Manufacture: String!
  Model: String!
  Year: String!
  type: String!
  createdAt: AWSDateTime!
  isActive: Boolean

  vehiclesbooking: [VehicleBooking]
    @hasMany(indexName: "byVehicle", fields: ["id"])

  userId: ID!
  user: User @belongsTo(fields: ["userId"])
}

type VehicleBooking @model {
  id: ID!

  userId: ID! @index(name: "byUser", sortKeyFields: ["createdAt"])
  user: User @belongsTo(fields: ["userId"])

  vehicleId: ID @index(name: "byVehicle", sortKeyFields: ["createdAt"])
  vehicle: Vehicle @belongsTo(fields: ["vehicleId"])

  createdAt: AWSDateTime!
  type: String!
  status: String

  originLatitude: Float!
  originLongitude: Float!

  destLatitude: Float!
  destLongitude: Float!
}

# Rent schemas
type Room @model {
  id: ID!
  province: String!
  town: String!
  houseNumber: String!
  streetNumber: String!
  suburb: String!
  zipCode: Int!
  price: Float!
  type: String!
  description: String!
  roombooking: [RoomBooking]
}

type RoomBooking @model {
  id: ID!
  userId: ID! @index(name: "byUser", sortKeyFields: ["createdAt"])
  user: User @belongsTo(fields: ["userId"])
  room: Room!
  createdAt: AWSDateTime!
}
